import numpy as np
import lingam

def test_fit_m_lingam():
    sample_size=5000
    B_true = np.array([[0,0,0,0],[1.1,0,0,0],[0,0.9,0,0],[0.8,0,1.2,0]])
    missingness_mechanism_coef = 0.5

    # Generate the data
    X = np.random.laplace(size=sample_size, scale=1.0)
    Z = 1.1*X + np.random.laplace(size=sample_size, scale=1.0)
    Y = 0.9*Z + np.random.laplace(size=sample_size, scale=1.0)
    W = 0.8*X + 1.2*Y + np.random.laplace(size=sample_size, scale=1.0)
    Ry = (0.5*W -1 + np.random.logistic(size=sample_size, scale=1.0))>0
    Ys = Y.copy()
    Ys[Ry==1]=np.nan

    model = lingam.mLiNGAM(random_state=100, prior_knowledge=None)
    model.fit(np.column_stack([X,Z,Ys,W]));

    print("The estimated adjacency matrix is:\n", model.adjacency_matrix_)
    print("The true adjacency matrix is:\n", B_true)
    print("Done.")
